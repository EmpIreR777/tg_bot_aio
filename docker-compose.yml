services:
  postgres:
    image: postgres:latest
    container_name: postgres_aio
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - "5430:5432"
    volumes:
      - ./pgdata:/var/lib/postgresql/data/pgdata
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    command: >
      postgres -c max_connections=1000
               -c shared_buffers=256MB
               -c effective_cache_size=768MB
               -c maintenance_work_mem=64MB
               -c checkpoint_completion_target=0.7
               -c wal_buffers=16MB
               -c default_statistics_target=100
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres_user_aio -d postgres_db_aio" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    tty: true
    stdin_open: true

  redis:
    image: redis:latest
    container_name: redis_aio
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_USER=${REDIS_USER}
      - REDIS_USER_PASSWORD=${REDIS_USER_PASSWORD}
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    ports:
      - "6380:6379"
    networks:
      - app_network
    restart: unless-stopped
    tty: true
    stdin_open: true

  # bot:
  #   build: ./
  #   container_name: aio_bot
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     redis:
  #       condition: service_started
  #   environment:
  #     - DATABASE_URL=postgres://postgres_user_aio:postgres_password_aio@postgres_aio:5430/postgres_db_aio
  #     - REDIS_URL=redis://:your_secure_password@redis:6379/0
  #   restart: unless-stopped
  #   networks:
  #     - app_network

volumes:
  pgdata:
    driver: local
  redis_data:
    driver: local

networks:
  app_network:
    driver: bridge